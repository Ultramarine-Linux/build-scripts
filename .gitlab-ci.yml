image: registry.fedoraproject.org/fedora-minimal:35
services:
  - docker:dind

stages:
  - build
  - test
  - deploy

# only run these when files in kickstarts/ or gitlab-ci.yml was changed


iso-budgie:
  stage: build
  script:
    - microdnf install -y lorax-lmc-novirt vim-minimal pykickstart sudo
    - make flagship
  artifacts:
    paths:
    - build/
  rules:
    - changes:
        - .gitlab-ci.yml
        - kickstarts/*


iso-cutefish:
  stage: build
  script:
    - microdnf install -y lorax-lmc-novirt vim-minimal pykickstart sudo
    - make SPIN=cutefish image
  artifacts:
    paths:
    - build/
    when: always
  rules:
    - changes:
        - .gitlab-ci.yml
        - kickstarts/*

tarball-docker:
  stage: build
  before_script:
    - microdnf install -y moby-engine vim-minimal pykickstart sudo lorax-lmc-novirt
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - make docker
    # The docker image is named 'ultramarine', so push it to the registry
    - mv -v build/docker/ultramarine.tar.gz .
  artifacts:
    # the docker image is named "ultramarine"
    paths:
    - ultramarine-docker.tar.gz
    when: always

docker-deploy:
  stage: deploy
  needs:
    - tarball-docker
  dependencies:
    - tarball-docker
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker import ultramarine-docker.tar.gz ultramarine
    # if branch is lapis, make it latest
    - if [ "$CI_COMMIT_REF_NAME" = "lapis" ]; then
        - docker tag ultramarine $CI_REGISTRY/ultramarine:latest
        - docker push $CI_REGISTRY/ultramarine:latest
      else
        - docker tag ultramarine $CI_REGISTRY/ultramarine:$CI_COMMIT_REF_NAME
        - docker push $CI_REGISTRY/ultramarine:$CI_COMMIT_REF_NAME
      fi
  rules:
    - changes:
        - .gitlab-ci.yml
        - kickstarts/ultramarine-docker.ks